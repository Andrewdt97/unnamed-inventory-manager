AWSTemplateFormatVersion: "2010-09-09"
Transform:
  - AWS::Serverless-2016-10-31

Description: >
  Create cloud formation stack for restapi, ip authorizer lambda, backend lambda

Globals:
  Function:
    Timeout: 30
    MemorySize: 256

Parameters:
  IpRange:
    Type: AWS::SSM::Parameter::Value<String>
    Description: "IP range for authorization"
    Default: "ip-range"
  DatabaseUrl:
    Type: AWS::SSM::Parameter::Value<String>
    Description: "URL for the database connection"
    Default: "database-url"

# TODO: Change bucket names???
Mappings:
  StagesMap:
    staging:
      ConfigBucket: "staging-bucket-name"
      ConfigKey: "source-data-key-path"
    prod:
      ConfigBucket: "prod-bucket-name"
      ConfigKey: "source-data-key-path"

Resources:
  IpAuthorizerLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      CodeUri: ./ip-authorizer
      Environment:
        Variables:
          IP_RANGE: !Ref IpRange

  BackendLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs20.x
      CodeUri: ./backend-lambda
      Environment:
        Variables:
          DATABASE_URL: !Ref DatabaseUrl
      Events:
        RestApi:
          Type: Api
          Properties:
            Path: /
            Method: ANY

  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Auth:
        DefaultAuthorizer: !Ref IpAuthorizerLambdaFunction
      DefinitionBody:
        swagger: "2.0"
        info:
          title: "RestApi"
        paths:
          &standardImplementation:
            responses:
              "200":
                description: "Successful response"
              "400":
                description: "Bad request"
              "500":
                description: "Server error"
            x-amazon-apigateway-integration:
              uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BackendLambda.Arn}/invocations"
              httpMethod: "POST"
              type: "aws_proxy"
          /products:
            get: *standardImplementation
            post: *standardImplementation
          /product:
            put: *standardImplementation
          /products/sold:
            put: *standardImplementation
          /products/to-floor:
            post: *standardImplementation
          /users:
            get: *standardImplementation

Outputs:
  ApiGatewayInvokeURL:
    Description: "Invoke URL for the API Gateway endpoint"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
  IpAuthorizerLambdaFunctionArn:
    Description: "ARN of the IP authorizer Lambda"
    Value: !GetAtt IpAuthorizerLambda.Arn
  BackendLambdaFunctionArn:
    Description: "ARN of the Backend Lambda"
    Value: !GetAtt BackendLambda.Arn
